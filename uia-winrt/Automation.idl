import "AutomationCacheRequest.idl";
import "AutomationConditions.idl";
import "AutomationElement.idl";
import "AutomationPattern.idl";
import "AutomationProperty.idl";
import "AutomationTreeWalker.idl";

namespace uia
{
    //delegate void AutomationEventHandler();
    delegate void FocusChangedEventHandler(AutomationElement sender);
    delegate void PropertyChangedEventHandler(AutomationElement sender, AutomationProperty property, Object newValue);
    //delegate void StructureChangedEventHandler();
    //delegate void TextEditTextChangedEventHandler();
    //delegate void NotificationEventHandler();
    //delegate void ActiveTextPositionChangedEventHandler();

    [default_interface]
    runtimeclass Automation
    {
        Automation();

        // ====== IUIAutomation ======

        AutomationCondition ContentViewCondition{ get; };
        AutomationTreeWalker ContentViewWalker{ get; };
        AutomationCondition ControlViewCondition{ get; };
        AutomationTreeWalker ControlViewWalker{ get; };
        //ProxyFactoryMapping{ get; };
        AutomationCondition RawViewCondition{ get; };
        AutomationTreeWalker RawViewWalker{ get; };
        //ReservedMixedAttributeValue{ get; };
        //ReservedNotSupportedValue{ get; };

        //void AddAutomationEventHandler(AutomationEvent event, AutomationElement element, AutomationTreeScope scope, AutomationCacheRequest cacheRequest, AutomationEventHandler handler);
        void AddFocusChangedEventHandler(AutomationCacheRequest cacheRequest, FocusChangedEventHandler handler);
        //void AddPropertyChangedEventHandler(AutomationElement element, AutomationTreeScope scope, AutomationCacheRequest cacheRequest, PropertyChangedEventHandler handler);
        //void AddPropertyChangedEventHandlerNativeArray();
        //void AddStructureChangedEventHandler(AutomationCacheRequest cacheRequest, StructureChangedEventHandler handler);
        //CheckNotSupported();
        Boolean CompareElements(AutomationElement el1, AutomationElement el2);
        //Boolean CompareRuntimeIds();
        AutomationCondition CreateAndCondition(AutomationCondition condition1, AutomationCondition condition2);
        //AutomationCondition CreateAndConditionFromArray();
        //AutomationCondition CreateAndConditionFromNativeArray();
        AutomationCacheRequest CreateCacheRequest();
        AutomationCondition CreateFalseCondition();
        AutomationCondition CreateNotCondition(AutomationCondition condition);
        AutomationCondition CreateOrCondition(AutomationCondition condition1, AutomationCondition condition2);
        //AutomationCondition CreateOrConditionFromArray();
        //AutomationCondition CreateOrConditionFromNativeArray();
        AutomationCondition CreatePropertyCondition(AutomationProperty property, Object value);
        AutomationCondition CreatePropertyConditionEx(AutomationProperty property, Object value, PropertyConditionOptions options);
        //CreateProxyFactoryEntry();
        AutomationTreeWalker CreateTreeWalker(AutomationCondition condition);
        AutomationCondition CreateTrueCondition();
        //AutomationElement ElementFromHandle();
        //AutomationElement ElementFromHandleBuildCache();
        //AutomationElement ElementFromIAccessible();
        //AutomationElement ElementFromIAccessibleBuildCache();
        AutomationElement ElementFromPoint(Windows.Foundation.Point point);
        AutomationElement ElementFromPointBuildCache(Windows.Foundation.Point point, AutomationCacheRequest cacheRequest);
        AutomationElement GetFocusedElement();
        AutomationElement GetFocusedElementBuildCache(AutomationCacheRequest cacheRequest);
        String GetPatternProgrammaticName(AutomationPattern pattern);
        String GetPropertyProgrammaticName(AutomationProperty property);
        AutomationElement GetRootElement();
        AutomationElement GetRootElementBuildCache(AutomationCacheRequest cacheRequest);
        //IntNativeArrayToSafeArray();
        //IntSafeArrayToNativeArray();
        //PollForPotentialSupportedPatterns();
        //PollForPotentialSupportedProperties();
        //Object RectToVariant(Windows.Foundation.Rect rect);
        void RemoveAllEventHandlers();
        //void RemoveAutomationEventHandler(AutomationEventHandler handler);
        void RemoveFocusChangedEventHandler(FocusChangedEventHandler handler);
        void RemovePropertyChangedEventHandler(AutomationElement element, PropertyChangedEventHandler handler);
        //void RemoveStructureChangedEventHandler(StructureChangedEventHandler handler);
        //SafeArrayToRectNativeArray();
        //Windows.Foundation.Rect VariantToRect(Object variant);

        // ====== IUIAutomation2 ======

        Boolean AutoSetFocus{ get; set; };
        Int64 ConnectionTimeout{ get; set; };
        Int64 TransactionTimeout{ get; set; };

        // ====== IUIAutomation3 ======

        //void AddTextEditTextChangedEventHandler(TextEditTextChangedEventHandler handler);
        //void RemoveTextEditTextChangedEventHandler(TextEditTextChangedEventHandler handler);

        // ====== IUIAutomation4 ======

        //void AddChangesEventHandler();
        //void RemoveChangesEventHandler();

        // ====== IUIAutomation5 ======

        //void AddNotificationEventHandler(NotificationEventHandler handler);
        //void RemoveNotificationEventHandler(NotificationEventHandler handler);

         // ====== IUIAutomation6 ======

        //CoalesceEvents{ get; set; };
        //ConnectionRecoveryBehavior{ get; set; };

        //void AddActiveTextPositionChangedEventHandler(ActiveTextPositionChangedEventHandler handler);
        //void AddEventHandlerGroup();
        //CreateEventHandlerGroup();
        //void RemoveActiveTextPositionChangedEventHandler(ActiveTextPositionChangedEventHandler handler);
        //void RemoveEventHandlerGroup();
    }
}
